#############################################################################
# Makefile for building: src
# Generated by qmake (2.01a) (Qt 4.7.1) on: Sat Jan 15 11:50:05 2011
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Admin.cpp \
		AdminDAO.cpp \
		Book.cpp \
		BookDAO.cpp \
		Date.cpp \
		Kind.cpp \
		KindDAO.cpp \
		Library.cpp \
		main.cpp \
		Reader.cpp \
		ReaderDAO.cpp \
		System.cpp \
		User.cpp 
OBJECTS       = Admin.o \
		AdminDAO.o \
		Book.o \
		BookDAO.o \
		Date.o \
		Kind.o \
		KindDAO.o \
		Library.o \
		main.o \
		Reader.o \
		ReaderDAO.o \
		System.o \
		User.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = src
DESTDIR       = 
TARGET        = src

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile src.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/src1.0.0 || $(MKDIR) .tmp/src1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/src1.0.0/ && $(COPY_FILE) --parents Admin.h AdminDAO.h Book.h BookDAO.h Date.h ILibrary.h Kind.h KindDAO.h Library.h Reader.h ReaderDAO.h Student.h System.h Teacher.h User.h .tmp/src1.0.0/ && $(COPY_FILE) --parents Admin.cpp AdminDAO.cpp Book.cpp BookDAO.cpp Date.cpp Kind.cpp KindDAO.cpp Library.cpp main.cpp Reader.cpp ReaderDAO.cpp System.cpp User.cpp .tmp/src1.0.0/ && (cd `dirname .tmp/src1.0.0` && $(TAR) src1.0.0.tar src1.0.0 && $(COMPRESS) src1.0.0.tar) && $(MOVE) `dirname .tmp/src1.0.0`/src1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/src1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

Admin.o: Admin.cpp Admin.h \
		User.h \
		Reader.h \
		AdminDAO.h \
		Student.h \
		Teacher.h \
		ReaderDAO.h \
		Book.h \
		Date.h \
		BookDAO.h \
		System.h \
		Kind.h \
		KindDAO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Admin.o Admin.cpp

AdminDAO.o: AdminDAO.cpp AdminDAO.h \
		Admin.h \
		User.h \
		Reader.h \
		System.h \
		Date.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AdminDAO.o AdminDAO.cpp

Book.o: Book.cpp Book.h \
		Date.h \
		KindDAO.h \
		System.h \
		Reader.h \
		User.h \
		Kind.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Book.o Book.cpp

BookDAO.o: BookDAO.cpp BookDAO.h \
		System.h \
		Date.h \
		Kind.h \
		KindDAO.h \
		ReaderDAO.h \
		Book.h \
		Reader.h \
		User.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BookDAO.o BookDAO.cpp

Date.o: Date.cpp Date.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Date.o Date.cpp

Kind.o: Kind.cpp Book.h \
		Date.h \
		KindDAO.h \
		System.h \
		BookDAO.h \
		Kind.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Kind.o Kind.cpp

KindDAO.o: KindDAO.cpp KindDAO.h \
		System.h \
		Date.h \
		Kind.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o KindDAO.o KindDAO.cpp

Library.o: Library.cpp Library.h \
		ILibrary.h \
		Kind.h \
		User.h \
		Reader.h \
		Admin.h \
		KindDAO.h \
		System.h \
		Date.h \
		ReaderDAO.h \
		AdminDAO.h \
		BookDAO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Library.o Library.cpp

main.o: main.cpp ILibrary.h \
		Library.h \
		Reader.h \
		User.h \
		Admin.h \
		Kind.h \
		KindDAO.h \
		System.h \
		Date.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Reader.o: Reader.cpp User.h \
		BookDAO.h \
		System.h \
		Date.h \
		Reader.h \
		Book.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Reader.o Reader.cpp

ReaderDAO.o: ReaderDAO.cpp User.h \
		ReaderDAO.h \
		Reader.h \
		Student.h \
		Teacher.h \
		System.h \
		Date.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ReaderDAO.o ReaderDAO.cpp

System.o: System.cpp System.h \
		Date.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o System.o System.cpp

User.o: User.cpp User.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o User.o User.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

